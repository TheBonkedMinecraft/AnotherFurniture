plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

archivesBaseName = "${rootProject.archives_base_name}-${project.name}"

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
	maven {
        name = 'tterrag.maven'
        url = 'https://maven.tterrag.com/'
    }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://cursemaven.com" } // Forge Config API Port
}

dependencies {
	common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
	
	// essential
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    
	// integration
	//modImplementation("com.simibubi.create:create-fabric-1.19.2:0.5.0.i-946+1.19.2")
	//modImplementation("com.jozufozu.flywheel:flywheel-fabric-1.19.2:${fabric_flywheel_version}")
    //modImplementation("com.tterrag.registrate:Registrate:${registrate_version}")
	
	// misc
	modImplementation "com.terraformersmc:modmenu:${rootProject.mod_menu_version}"
	//modImplementation("curse.maven:jei-238222:3940099")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = project.archivesBaseName
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}